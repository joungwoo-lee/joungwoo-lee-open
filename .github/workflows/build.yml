# .github/workflows/build.yml
# main 브랜치 변경 시 도커 이미지를 빌드해서
# sandboxdocker.tar 과 docker-compose.yml 을 Release (tag=build-latest)에 업로드합니다.
# 실행은:
#   wget https://github.com/joungwoo-pc/joungwoo-pc-open/releases/download/build-latest/sandboxdocker.tar
#   wget https://github.com/joungwoo-pc/joungwoo-pc-open/releases/download/build-latest/docker-compose.yml
#   docker load -i sandboxdocker.tar
#   docker compose up -d

name: Publish Docker tar and compose to Release

on:
  push:
    branches: [ "main" ]
    paths:
      - "sandboxdocker/**"
      - ".github/workflows/build.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sanity check
        run: |
          set -euo pipefail
          test -d sandboxdocker || { echo "sandboxdocker/ not found"; exit 1; }
          test -f sandboxdocker/docker_requirements.txt || { echo "docker_requirements.txt missing"; exit 1; }
          test -f sandboxdocker/docker_runs.txt || { echo "docker_runs.txt missing"; exit 1; }
          ls -la sandboxdocker || true

      - name: Generate Dockerfile
        working-directory: sandboxdocker
        run: |
          set -euo pipefail
          cat > Dockerfile <<'EOF'
          FROM python:3.11-slim
          ENV DEBIAN_FRONTEND=noninteractive \
              PIP_DISABLE_PIP_VERSION_CHECK=1 \
              PYTHONDONTWRITEBYTECODE=1 \
              PYTHONUNBUFFERED=1
          ARG DOCKER_HOME=/root
          ENV DOCKER_HOME=${DOCKER_HOME}
          ENV PROJECT_DIR=${DOCKER_HOME}/sandboxdocker
          ENV EXT_VOLUME_DIR=${DOCKER_HOME}/ext_volume
          RUN mkdir -p "${PROJECT_DIR}" "${EXT_VOLUME_DIR}"
          COPY . "${PROJECT_DIR}"
          VOLUME ["${EXT_VOLUME_DIR}"]
          WORKDIR ${PROJECT_DIR}
          CMD ["bash"]
          EOF

      - name: Build Docker image
        run: docker build -t sandboxdocker:latest sandboxdocker

      - name: Save image as tar
        run: |
          docker save sandboxdocker:latest -o sandboxdocker.tar
          ls -lh sandboxdocker.tar

      - name: Generate docker-compose.yml
        run: |
          cat > docker-compose.yml <<'EOF'
          version: "3.8"
          services:
            sandboxdocker:
              image: sandboxdocker:latest
              container_name: sandboxdocker
              restart: always
              tty: true
              working_dir: /root/ext_volume
              environment:
                INTERNAL_LLM_API_BASE: "http://host.docker.internal:11434/v1"
                INTERNAL_LLM_API_KEY: "dev-key"
              volumes:
                - ${HOME}:/root/ext_volume
              ports:
                - "37910:37910"
                - "37911:37911"
                - "37912:37912"
                - "37913:37913"
                - "37914:37914"
                - "37915:37915"
                - "38010:38010"
                - "38011:38011"
              entrypoint: >
                bash -lc "
                  if [ -f /root/sandboxdocker/autorun.sh ]; then
                    chmod +x /root/sandboxdocker/autorun.sh || true;
                    /root/sandboxdocker/autorun.sh || true;
                  fi;
                  exec sleep infinity
                "
          EOF

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-latest
          name: build-latest
          make_latest: true
          prerelease: true
          files: |
            sandboxdocker.tar
            docker-compose.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}